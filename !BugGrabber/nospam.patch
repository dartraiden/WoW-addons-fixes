--- "a/!BugGrabber/BugGrabber.lua"
+++ "b/!BugGrabber/BugGrabber.lua"
@@ -82,13 +82,7 @@ local L = {
 	ADDON_CALL_PROTECTED = "[%s] AddOn '%s' tried to call the protected function '%s'.",
 	ADDON_CALL_PROTECTED_MATCH = "^%[(.*)%] (AddOn '.*' tried to call the protected function '.*'.)$",
 	ADDON_DISABLED = "|cffffff00!BugGrabber and %s cannot coexist; %s has been forcefully disabled. If you want to, you may log out, disable !BugGrabber, and enable %s.|r",
-	BUGGRABBER_STOPPED = "|cffffff00There are too many errors in your UI. As a result, your game experience may be degraded. Disable or update the failing addons if you don't want to see this message again.|r",
-	ERROR_DETECTED = "%s |cffffff00captured, click the link for more information.|r",
 	ERROR_UNABLE = "|cffffff00!BugGrabber is unable to retrieve errors from other players by itself. Please install BugSack or a similar display addon that might give you this functionality.|r",
-	NO_DISPLAY_1 = "|cffffff00You seem to be running !BugGrabber with no display addon to go along with it. Although a slash command is provided for accessing error reports, a display can help you manage these errors in a more convenient way.|r",
-	NO_DISPLAY_2 = "|cffffff00The standard display is called BugSack, and can probably be found on the same site where you found !BugGrabber.|r",
-	NO_DISPLAY_STOP = "|cffffff00If you don't want to be reminded about this again, run /stopnag.|r",
-	STOP_NAG = "|cffffff00!BugGrabber will not nag about missing a display addon again until next patch.|r",
 	USAGE = "|cffffff00Usage: /buggrabber <1-%d>.|r",
 }
 
@@ -297,12 +291,6 @@ do
 		msgsAllowedLastTime = GetTime()
 		if msgsAllowed < 1 then
 			if not paused then
-				if bugGrabberParentAddon == STANDALONE_NAME then
-					if GetTime() > lastWarningTime + 10 then
-						print(L.BUGGRABBER_STOPPED)
-						lastWarningTime = GetTime()
-					end
-				end
 				paused=true
 				triggerEvent("BugGrabber_CapturePaused")
 			end
@@ -371,10 +359,6 @@ do
 			end
 		end
 
-		if not isBugGrabbedRegistered then
-			print(L.ERROR_DETECTED:format(addon:GetChatLink(errorObject)))
-		end
-
 		addon:StoreError(errorObject)
 
 		triggerEvent("BugGrabber_BugGrabbed", errorObject)
@@ -494,22 +478,6 @@ local function initDatabase()
 		addon.LoadTranslations = nil
 	end
 
-	-- Only warn about missing display if we're running standalone.
-	if not displayObjectName and bugGrabberParentAddon == STANDALONE_NAME then
-		local _, _, _, currentInterface = GetBuildInfo()
-		if type(currentInterface) ~= "number" then currentInterface = 0 end
-		if not sv.stopnag or sv.stopnag < currentInterface then
-			print(L.NO_DISPLAY_1)
-			print(L.NO_DISPLAY_2)
-			print(L.NO_DISPLAY_STOP)
-			_G.SlashCmdList.BugGrabberStopNag = function()
-				print(L.STOP_NAG)
-				sv.stopnag = currentInterface
-			end
-			_G.SLASH_BugGrabberStopNag1 = "/stopnag"
-		end
-	end
-
 	initDatabase = nil
 end
 
